name: SonarScan
on:
  workflow_call:
    inputs:
      test_coverage:
        description: "Enable or Disable Test Coverage"
        default: true
        type: boolean
        required: false
    secrets:
      sonar_token:
        description: "Sonarqube Token"
        required: true
      sonar_host:
        description: "Sonarqube Host URL"
        required: true
jobs:
  scan:
    name: sonarqube
    runs-on: ubuntu-latest
    timeout-minutes: 20
    steps:
      - name: 'Checkout repository on: ${{ github.REF }}'
        uses: actions/checkout@v2
      - name: Retrieve entire repository history
        run: |
          git fetch --prune --unshallow
      - uses: actions/download-artifact@v2
        if: (inputs.test_coverage == true)
        with:
          name: coverage-output
          path: coverage
      - name: Sonar PR scan
        if: ${{ github.event_name == 'pull_request' }}
        uses: docker://sonarsource/sonar-scanner-cli:latest
        env:
          SONAR_TOKEN: ${{ secrets.sonar_token }}
          SONAR_HOST_URL: ${{ secrets.sonar_host }}
        with:
          projectBaseDir: .
          args: >
            -Dsonar.projectKey=${{ github.event.repository.name }}
            -Dsonar.pullrequest.key=${{ github.event.number }}
            -Dsonar.pullrequest.branch=${{ github.HEAD_REF }}
            -Dsonar.pullrequest.base=${{ github.BASE_REF }}
            -Dsonar.javascript.coveragePlugin=lcov
            -Dsonar.javascript.lcov.reportPaths=coverage/lcov.info
      - name: Sonar Branch scan
        if: ${{ github.event_name != 'pull_request' }}
        uses: docker://sonarsource/sonar-scanner-cli:latest
        env:
          SONAR_TOKEN: ${{ secrets.sonar_token }}
          SONAR_HOST_URL: ${{ secrets.sonar_host }}
        with:
          projectBaseDir: .
          args: >
            -Dsonar.projectKey=${{ github.event.repository.name }}
            -Dsonar.javascript.coveragePlugin=lcov
            -Dsonar.javascript.lcov.reportPaths=coverage/lcov.info      
            
